<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 9">
<link id=Main-File rel=Main-File href="../ComplexTypes.htm">
<link rel=Preview href=preview.wmf>
<meta name=Robots content=NoIndex>
<script src=script.js></script><script><!--

if( !(IsWin("PPTOtl")||IsWin("PPTNav")||IsWin("PPTOtlNav")) )
{
	obj = document.all.item("Main-File")
	parent.location.href=obj.href
}

var gOtlHiliteClr="#800080",gOtlNormalClr="#FFFFFF",gOtlActiveClr="#006600",gSelected="",gTxtState=false,gChildEntryTable=new Array()

function Load()
{
	if( IsWin("PPTOtl" ) ){ LoadOtl(); parent.gOtlLoaded=true; return }
	if( IsWin("PPTNav" ) ){ LoadNav("NavObj",UpdNav); parent.gNavLoaded=true; return }
	if( IsWin("PPTOtlNav" ) ){ LoadNav("OtlNavObj",UpdOtlNav); parent.gOtlNavLoaded=true; return }
}
function Upd(){ if( IsWin("PPTNav") ) LoadNav("NavObj",UpdNav) }
function LoadNav( oId,UpdFunc )
{
	document.ondragstart=CancelDrag
	document.onselectstart=CancelDrag
	document.body.style.margin=2
	UpdFunc()
	obj=document.all.item(oId)
	obj.style.display="block"
	obj.style.visibility="visible"
	document.bgColor="threedface"
}
function LoadOtl()
{
	document.ondragstart=CancelDrag
	document.onselectstart=CancelDrag
	OtlObj.style.display="block"
	OtlObj.style.visibility="visible"
	if( gOtlActiveClr == "" ) gOtlActiveClr=document.linkColor
	if( gOtlHiliteClr == "" ) gOtlHiliteClr=document.fgColor
	if( gOtlNormalClr == "" )
		gOtlNormalClr=document.bgColor
	else
		document.bgColor=gOtlNormalClr  

	InitArray()

	if( ObjExists( parent.gCurSld ) ) {
		ChangeState( parent.gCurSld,gOtlNormalClr,gOtlHiliteClr )
		gSelected=parent.gCurSld
	}
	else gSelected = -1

	UpdOtl()
}
function UpdOtl(){ UpdIdx(parent.gCurSld) }
function UpdIdx( idx )
{
	if( gSelected != idx ) {
		if( gSelected > 0 )
			ChangeState( gSelected,gOtlHiliteClr,gOtlNormalClr )

		if( ObjExists( idx ) ) {
			gSelected = idx
			ChangeState( gSelected,gOtlNormalClr,gOtlHiliteClr )
		}
		else gSelected = -1
	}

	if( gTxtState != parent.gOtlTxtExp ) {
		state = "block"
		if( !parent.gOtlTxtExp )
			state="none"

		for(ii=0; ii<gChildEntryTable.length; ii++) {
			obj=gChildEntryTable[ii];
			if( obj.id == null ) continue;

			if( obj.id.indexOf("PPTC") >= 0 )
				obj.style.display=state;
		} 
		gTxtState=parent.gOtlTxtExp
		if( ObjExists( gSelected ) )
			ChangeState( gSelected,gOtlNormalClr,gOtlHiliteClr )
	}
}
function InitArray()
{
	count=0
	for(ii=0; ii<document.all.tags("DIV").length; ii++) {
		obj=document.all.tags("DIV").item(ii)
		if( obj.id == null ) continue

		if( obj.id.indexOf("PPTC") >= 0 ) {   
			gChildEntryTable[count++]=obj
			obj.children.tags("TABLE").item(0).style.borderColor=gOtlNormalClr
		}
	}
}
function ChangeState( idx,fgColor,bgColor )
{
	obj=document.all.item("PPTL"+idx)
	obj.style.color=fgColor

	obj=document.all.item("PPTP"+idx)
	obj.style.backgroundColor=bgColor

	obj=document.all.item("PPTB"+idx)
	if( obj )
		obj.style.borderLeftColor=obj.style.borderBottomColor=bgColor
}
function ChgClr( o,clr ){ if( o.id != "PPTL"+gSelected ) o.style.color=clr }
function Over( obj ){ ChgClr(obj,gOtlActiveClr) }
function Out( obj ){ ChgClr(obj,gOtlHiliteClr) }
function ObjExists( ii ) { obj=document.all("PPTP"+ii ); return( obj ) }
function GoToSld( href ){ UpdIdx(parent.GetSldNum(href)); parent.GoToSld( href ) }
function CancelDrag(){ window.event.cancelBubble=true;window.event.returnValue=false}

function UpdNav()
{
	txt = "<center>";
	if( parent.GetHrefObj( parent.gCurSld ).mOrigVis == 1 )
		txt += "Slide " + parent.GetCurSldNum() + " of " + parent.GetNumSlds()
	else
		txt += "Hidden Slide"
	txt += "</center>";
	nav_text.innerHTML = txt;

	if( !parent.HasPrevSld() )
		gBtnArr["nb_prev"].Enabled(0)
	else
		gBtnArr["nb_prev"].Enabled(1)

	if( !parent.HasNextSld() )
		gBtnArr["nb_next"].Enabled(0)
	else
		gBtnArr["nb_next"].Enabled(1)
	gBtnArr["nb_nts"].SetEnabled()
	gBtnArr["nb_nts"].SetFlag( parent.gHasNts )

	gBtnArr["nb_sldshw"].Enabled(1)
	gBtnArr["nb_voice"].Enabled(1)
}

function UpdOtlNav()
{
	gBtnArr["nb_otl"].SetEnabled();

	if( parent.gOtlOpen )
		gBtnArr["nb_otlTxt"].Enabled( true );
	else
		document.all.item("nb_otlTxtBorder").style.visibility = "hidden";
}



//-->
</script>
<style>
<!--.PTxt
	{position:relative;
	width:100%;
	margin-top:5px;
	padding-left:5px;
	font-weight:bold;}
.CTxt
	{position:relative;
	width:100%;
	padding-left:10px;}
.CBorder
	{position:relative;
	width:100%;
	border-style:solid;
	border-width:1px;
	border-color:white;
	padding-bottom:5px;}
a
	{color:purple;
	text-decoration:none;}
.button
	{position:absolute;
	width:32px;
	height:20px;
	border-style:solid;
	border-width:1px;
	border-color:threedface;}
-->
</style>
</head>

<body onload="Load()">

<div id=NavObj onload="Load()" onmouseover="BtnOnOver()"
onmousedown="BtnOnDown()" onmouseout="BtnOnOut()" onmouseup="BtnOnUp()"
onkeypress="_KPH()" style='display:none;visibility:hidden'>

<table style='position:absolute;width:70px;visibility:hidden' align=left
 cellpadding=0 cellspacing=0>
 <td nowrap>
 <div id="nb_ntsElem" align=center style='position:relative;padding:3px;
 font-family:Arial;color:buttontext;font-size:9pt'><img src="notes_flag.gif"
 border=0 id="notes_flag" style='display:none'><span style="mso-spacerun:
 yes">  </span>Notes</div>
 <div title="Show/Hide Notes" id="nb_nts" style='position:absolute;top:0%;
 left:0%;width:100%;height:100%'></div>
 </td>
</table>

<table style='position:relative' align=right cellpadding=0 cellspacing=0>
 <td>
 <div id="nb_sldshwBorder" style='position:absolute;left:-20px;width:20px;
 height:20px'>
 <div style='position:absolute;clip:rect(0px, 18px, 18px, 0px)'><img
 src=buttons.gif id="nb_sldshw" title="Full Screen Slide Show"
 style='position:relative;left:-254px'></div>
 </div>
 </td>
 <td>
 <div id="nb_voiceBorder" style='display:none;position:absolute;left:-40px;
 width:20px;height:20px'>
 <div style='position:absolute;clip:rect(0px, 18px, 18px, 0px)'><img
 src=buttons.gif id="nb_voice" title="Pause/Play Narration" style='position:
 relative;left:-290px'></div>
 </div>
 </td>
</table>

<table style='position:relative' align=center cellpadding=0 cellspacing=0>
 <td nowrap>
 <div id="nb_prevBorder" class=button style='left:-30px'>
 <div style='position:absolute;clip:rect(0px, 30px, 18px, 0px)'><img
 src=buttons.gif id="nb_prev" title="Previous Slide" style='position:relative;
 left:0px'></div>
 </div>
 <span id="nav_text" style='position:relative;top:3px;width:100px;font-family:
 Arial;color:buttontext;font-size:9pt'></span>
 <div id="nb_nextBorder" class=button>
 <div style='position:absolute;clip:rect(0px, 30px, 18px, 0px)'><img
 src=buttons.gif id="nb_next" title="Next Slide" style='position:relative;
 left:-90px'></div>
 </div>
 </td>
</table>

</div>

<div id=OtlNavObj onload="Load()" onmouseover="BtnOnOver()"
onmousedown="BtnOnDown()" onmouseout="BtnOnOut()" onmouseup="BtnOnUp()"
onkeypress="_KPH()" style='display:none;visibility:hidden'>

<table style='position:relative;width:70px' align=left cellpadding=0
 cellspacing=0>
 <td nowrap>
 <div id="nb_otlElem" align=center style='position:relative;padding:3px;
 font-family:Arial;color:buttontext;font-size:9pt'>Outline</div>
 <div title="Show/Hide Outline" id="nb_otl" style='position:absolute;
 top:0%;left:0%;width:100%;height:100%'></div>
 </td>
</table>

<table style='position:relative' align=center cellpadding=0 cellspacing=0>
 <td>
 <div style='position:absolute;left:-18px;width:24px;height:20px;border-style:
 solid;border-width:1px;border-color:threedface' id="nb_otlTxtBorder">
 <div style='position:absolute;clip:rect(0px, 22px, 18px, 0px)'><img
 src=buttons.gif id="nb_otlTxt" title="Expand/Collapse Outline"
 style='position:relative;left:-157px'></div>
 </div>
 </td>
</table>

</div>

<div id=OtlObj style='display:none;visibility:hidden'>

<table width="100%" style='font-family:Arial;font-size:9pt'>
 <tr>
  <td>
  <div id=PPTP1 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0001.htm');" onmouseover="Over(this)"
  id=PPTL1 onmouseout="Out(this)">XML Schema</a></font></div>
  <div id=PPTC1 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB1 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1><font size=2>Complex Types</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP2 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0002.htm');" onmouseover="Over(this)"
  id=PPTL2 onmouseout="Out(this)">Overview</a></font></div>
  <div id=PPTC2 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB2 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Complex type hierarchies</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Derivation</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>By extension</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>By restriction</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Substitution groups</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Indicating types in instance documents</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Controlling derivation</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Preventing derivation</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Preventing substitution</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Forcing derivation or substitution</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP3 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0088.htm');" onmouseover="Over(this)"
  id=PPTL3 onmouseout="Out(this)">XML Schema Complex Types</a></font></div>
  <div id=PPTC3 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB3 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1><font size=2>Complex Type Hierarchies</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP4 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0082.htm');" onmouseover="Over(this)"
  id=PPTL4 onmouseout="Out(this)">Complex Types</a></font></div>
  <div id=PPTC4 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB4 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=4><font size=2>Two classes of complex types</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=3><font size=2>Simple content</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=2><font size=2>Text content, with attributes now or in future
    (otherwise would be simple type)</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=2><font size=2>Use xs:simpleContent inside xs:complexType</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=3><font size=2>Complex content</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=2><font size=2>Element or mixed content, possibly with
    attributes</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=2><font size=2>Use xs:complexContent inside xs:complexType</font></td>
   </tr>
   <tr>
    <td colspan=4></td>
    <td colspan=1><font size=2>Can have mixed attribute, true for mixed content</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP5 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0074.htm');" onmouseover="Over(this)"
  id=PPTL5 onmouseout="Out(this)">Complex Data Type Hierarchies</a></font></div>
  <div id=PPTC5 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB5 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Complex data types form hierarchy</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Two types of steps in hierarchy:</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Extension (xs:extension) adds content/attributes</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Add elements/attributes to base type</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Result might not validate against base type</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Easy to specify</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Changes get inherited</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Restriction (xs:restriction) removes
    content/attributes</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Specify new, related type</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Result will always validate against base type</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Verbose</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Have to repeat content from base type</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP6 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0081.htm');" onmouseover="Over(this)"
  id=PPTL6 onmouseout="Out(this)">Basic Complex Types</a></font></div>
  <div id=PPTC6 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB6 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1><font size=2>Basic complex types actually derived by
    restriction from xs:anyType</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP7 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0083.htm');" onmouseover="Over(this)"
  id=PPTL7 onmouseout="Out(this)">Simple Content</a></font></div>
  <div id=PPTC7 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB7 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Complex types with simple content are extensions
    of simple types</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Base type indicated through base attribute or
    nested anonymous simple type</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP8 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0084.htm');" onmouseover="Over(this)"
  id=PPTL8 onmouseout="Out(this)">Extending Complex Types</a></font></div>
  <div id=PPTC8 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB8 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Derivation by extension creates an implicit
    sequence containing base content model followed by extension content model</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Can't extend a choice with another choice to add
    possibilities</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Instead get sequence of two choices</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Use named groups instead</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Can't extend an all group or extend with an all
    group</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Attributes get added to those in the base type</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Attribute wildcards are unioned together</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP9 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0085.htm');" onmouseover="Over(this)"
  id=PPTL9 onmouseout="Out(this)">Extending Complex Types</a></font></div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP10 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0086.htm');" onmouseover="Over(this)"
  id=PPTL10 onmouseout="Out(this)">Restricting Complex Types</a></font></div>
  <div id=PPTC10 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB10 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Content model restrictions just like restricting
    redefined named groups</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Result must be valid against base</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Attribute restrictions like restricting
    redefined attribute groups</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Except that attributes are inherited from base
    type</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>To omit an attribute, set use attribute to
    prohibited</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Attribute wildcards combined by intersection</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP11 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0087.htm');" onmouseover="Over(this)"
  id=PPTL11 onmouseout="Out(this)">Restricting Complex Types</a></font></div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP12 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0089.htm');" onmouseover="Over(this)"
  id=PPTL12 onmouseout="Out(this)">XML Schema Complex Types</a></font></div>
  <div id=PPTC12 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB12 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1><font size=2>Substitutions</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP13 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0091.htm');" onmouseover="Over(this)"
  id=PPTL13 onmouseout="Out(this)">Using xsi:type</a></font></div>
  <div id=PPTC13 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB13 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Elements in instance don't have to be the same
    type as they are declared to be</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Use xsi:type attribute on instance element to
    specify type</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Type in instance must be derived from type in
    declaration</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Supports co-occurrence constraints</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Elements of different types have different
    combinations of attributes</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Use xsi:type rather than role/class/type
    attributes</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP14 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0093.htm');" onmouseover="Over(this)"
  id=PPTL14 onmouseout="Out(this)">Co-Occurrence with xsi:type</a></font></div>
  <div id=PPTC14 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB14 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Define common base type</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Derive specific types</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>One for each combination of attributes</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Fix attribute/element values</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Declare element with the common base type</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Use xsi:type to pick specific type for
    particular instances</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP15 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0092.htm');" onmouseover="Over(this)"
  id=PPTL15 onmouseout="Out(this)">Co-Occurrence with xsi:type</a></font></div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP16 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0094.htm');" onmouseover="Over(this)"
  id=PPTL16 onmouseout="Out(this)">Co-Occurrence with xsi:type</a></font></div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP17 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0095.htm');" onmouseover="Over(this)"
  id=PPTL17 onmouseout="Out(this)">Element Substitutions</a></font></div>
  <div id=PPTC17 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB17 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Can create substitution groups of elements</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Extensible choice groups</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>One element is the head element</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Member elements point to head element through substitutionGroup
    attribute</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Can be head elements for other substitution
    groups</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Wherever head element appears in content model,
    member elements can appear instead</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>All elements must be declared globally</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP18 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0096.htm');" onmouseover="Over(this)"
  id=PPTL18 onmouseout="Out(this)">Element Substitutions</a></font></div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP19 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0090.htm');" onmouseover="Over(this)"
  id=PPTL19 onmouseout="Out(this)">XML Schema Complex Types</a></font></div>
  <div id=PPTC19 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB19 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1><font size=2>Controlling Derivation and Substitution</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP20 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0080.htm');" onmouseover="Over(this)"
  id=PPTL20 onmouseout="Out(this)">Prevent Type Derivation</a></font></div>
  <div id=PPTC20 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB20 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Prevent derivations with final attribute</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>On xs:simpleType, stop simple type derivation by
    restriction, use in lists or unions</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>On xs:complexType, stop complex type derivation
    by restriction and/or extension</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>On xs:element, stop elements being used as head
    elements in substitution groups</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>finalDefault attribute on xs:schema provides
    default</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>#all or list of extension, restriction, list and
    union</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP21 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0078.htm');" onmouseover="Over(this)"
  id=PPTL21 onmouseout="Out(this)">Prevent Substitutions</a></font></div>
  <div id=PPTC21 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB21 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Blocking substitutions affects instance</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Can't use xsi:type</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Can't substitute element</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>block attribute on xs:complexType/xs:element</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>blockDefault attribute on xs:schema</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>#all or list of extension, restriction and substitution</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP22 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0079.htm');" onmouseover="Over(this)"
  id=PPTL22 onmouseout="Out(this)">Forcing Substitutions</a></font></div>
  <div id=PPTC22 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB22 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Abstract elements must be substituted</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Abstract complex types means</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>elements must use xsi:type or</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>elements must be substituted</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Set abstract attribute on complexType/element to
    true</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP23 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0033.htm');" onmouseover="Over(this)"
  id=PPTL23 onmouseout="Out(this)">Summary</a></font></div>
  <div id=PPTC23 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB23 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Complex types can have simple or complex content</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Complex types derived from other types by
    extension or by restriction</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Extension adds elements in sequence</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Restriction guarantees validity against base
    type</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Use xsi:type and substitution groups in instance</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Control derivations and substitutions with final,
    block and abstract attributes</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP24 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0035.htm');" onmouseover="Over(this)"
  id=PPTL24 onmouseout="Out(this)">Exercises</a></font></div>
  <div id=PPTC24 class=CTxt style='display:none'>
  <table style='color:purple' id=PPTB24 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Create complex data types for elements</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Build type hierarchies for complex types</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Use xsi:type to deal with co-occurrence
    constraints</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Optionally</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Try out substitution groups</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Experiment with the effect of blocking
    restrictions, extensions and substitution</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
</table>

</div>

<div style='display:none'><a href=master03.htm></a><a href=master03.xml></a><a
href=preview.wmf></a><a href=master04.htm></a><a href=master04.xml></a><a
href=master02.htm></a><a href=pres.xml></a><a href=editdata.mso></a><a
href=slide0001.htm></a><a href="slide0001_image001.gif"></a><a
href=slide0002.htm></a><a href="master03_image002.gif"></a><a
href=slide0088.htm></a><a href="slide0088_image003.gif"></a><a
href=slide0082.htm></a><a href=slide0074.htm></a><a href=slide0081.htm></a><a
href="slide0081_image004.gif"></a><a href=slide0083.htm></a><a
href="slide0083_image005.gif"></a><a href=slide0084.htm></a><a
href=slide0085.htm></a><a href="slide0085_image006.gif"></a><a
href=slide0086.htm></a><a href=slide0087.htm></a><a
href="slide0087_image007.gif"></a><a href=slide0089.htm></a><a
href="slide0089_image008.gif"></a><a href=slide0091.htm></a><a
href=slide0093.htm></a><a href=slide0092.htm></a><a
href="slide0092_image009.gif"></a><a href=slide0094.htm></a><a
href="slide0094_image010.gif"></a><a href=slide0095.htm></a><a
href=slide0096.htm></a><a href="slide0096_image011.gif"></a><a
href=slide0090.htm></a><a href="slide0090_image012.gif"></a><a
href=slide0080.htm></a><a href=slide0078.htm></a><a
href="slide0078_image013.gif"></a><a href=slide0079.htm></a><a
href="slide0079_image014.gif"></a><a href=slide0033.htm></a><a
href=slide0035.htm></a><a href=master01.htm></a><a
href="master03_stylesheet.css"></a><a href=script.js></a><a
href="../ComplexTypes.htm"></a><a href=error.htm></a><a href=fullscreen.htm></a><a
href=buttons.gif></a><a href=frame.htm></a><a href=outline.htm></a></div>

</body>

</html>
