<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 9">

<script>
<!--
if( window.name != "PPTNts" )
  parent.location.href = "../Typing%20in%20Transformations.html";
//-->
</script>
</head>

<body bgcolor=white text=black>

<table border=0 width="100%">
 <tr>
  <td width=5 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><font face=Verdana size=3>Two parts to the question
  &quot;Can I write XSLT 2.0 in the same kind of way that I write XSLT
  1.0?&quot; -- whether authors have to learn about the new changes, and
  whether the benefits are such that the learning curve is worth climbing. The
  learnability of the language forms a barrier to adoption (if users find it
  difficult to learn, they will get frustrated and will not pursue it) and is
  an important component of the more general usability of the language (in
  other words, learnability doesn't just hit you when you're learning -- if
  something's difficult to learn, it tends to be hard to use as well). Of
  course just because a language is difficult to learn doesn't mean it isn't <i>worth</i>
  learning…</font><br>
  </td>
 </tr>
</table>

</body>

</html>
