<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 9">

<script>
<!--
if( window.name != "PPTNts" )
  parent.location.href = "../Typing%20in%20Transformations.html";
//-->
</script>
</head>

<body bgcolor=white text=black>

<table border=0 width="100%">
 <tr>
  <td width=5 nowrap></td>
  <td width="100%"></td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><font face=Verdana size=3>I don't think that the
  answers are easy here; it might easily be that there is no solution that can
  meet the three requirements of (a) support for schema types, (b) support for
  static typing and (c) usability. But we need to be honest about the fact that
  XSLT 1.0 users are going to be negatively affected by the type-related
  changes introduced in XPath 2.0, rather than pretending that they can ignore
  the changes or that they will get benefits out of it.</font><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><br>
  </td>
 </tr>
 <tr>
  <td colspan=1></td>
  <td align=left colspan=1><font face=Verdana size=3>After giving the talk, I
  was asked what my experience was with writing XSLT 2.0 stylesheets. I've been
  using XSLT 2.0 a fair amount for my private projects, such as the datatype
  library language (http://www.jenitennison.com/datatypes). There are lots of benefits
  in doing so -- I've found the ability to create user-defined functions
  particularly useful -- but I'm constantly getting type-related errors from my
  code. If these type-related errors were actually pointing out errors in my
  code, it would be OK, but 99% of the time, the errors are things that have to
  be fixed by an explicit cast rather than by a change in the algorithm I'm
  using. Getting error messages is good if it helps you to create more robust
  code, but if they don't contribute to that, users are likely to get
  frustrated and to attempt to fix any further errors (which may be <i>real</i>
  errors) with the quick cast rather than thinking about why the error is
  occurring.</font><br>
  </td>
 </tr>
</table>

</body>

</html>
